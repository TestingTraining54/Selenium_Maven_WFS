<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-02T10:07:19 IST" name="Default suite" finished-at="2024-12-02T10:07:20 IST" duration-ms="1400">
    <groups>
    </groups>
    <test started-at="2024-12-02T10:07:19 IST" name="Default test" finished-at="2024-12-02T10:07:20 IST" duration-ms="1400">
      <class name="extentReports.ExtentReportsDemo">
        <test-method is-config="true" signature="setUp()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="setUp" finished-at="2024-12-02T10:07:19 IST" duration-ms="550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="doLogin()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="doLogin" finished-at="2024-12-02T10:07:19 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="getStatus(org.testng.ITestResult)[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="getStatus" finished-at="2024-12-02T10:07:19 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doLogin status=SUCCESS method=ExtentReportsDemo.doLogin()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="doSkip()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="doSkip" finished-at="2024-12-02T10:07:19 IST" duration-ms="3" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skip the testcase]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skip the testcase
at extentReports.ExtentReportsDemo.doSkip(ExtentReportsDemo.java:66)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doSkip -->
        <test-method is-config="true" signature="getStatus(org.testng.ITestResult)[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="getStatus" finished-at="2024-12-02T10:07:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doSkip status=SKIP method=ExtentReportsDemo.doSkip()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="doUserReg()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="doUserReg" finished-at="2024-12-02T10:07:19 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Intentionally Failing User Reg Test]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Intentionally Failing User Reg Test
at org.testng.Assert.fail(Assert.java:111)
at extentReports.ExtentReportsDemo.doUserReg(ExtentReportsDemo.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUserReg -->
        <test-method is-config="true" signature="getStatus(org.testng.ITestResult)[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="getStatus" finished-at="2024-12-02T10:07:19 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doUserReg status=FAILURE method=ExtentReportsDemo.doUserReg()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:extentReports.ExtentReportsDemo@1165b38]" started-at="2024-12-02T10:07:19 IST" name="endReport" finished-at="2024-12-02T10:07:20 IST" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- extentReports.ExtentReportsDemo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
